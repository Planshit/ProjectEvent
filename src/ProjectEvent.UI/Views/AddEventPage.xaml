<Page  xmlns:Input="clr-namespace:ProjectEvent.UI.Controls.Input"  xmlns:Base="clr-namespace:ProjectEvent.UI.Controls.Base"  xmlns:InputGroup="clr-namespace:ProjectEvent.UI.Controls.InputGroup"  xmlns:ItemSelect="clr-namespace:ProjectEvent.UI.Controls.ItemSelect"  xmlns:Action="clr-namespace:ProjectEvent.UI.Controls.Action"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:ProjectEvent.UI.Views"
      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
       xmlns:IconSelection="clr-namespace:ProjectEvent.UI.Controls.IconSelection"  x:Class="ProjectEvent.UI.Views.AddEventPage"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
       x:Name="Page"
      Title="AddEventPage"
       Margin="0"
       Background="White">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding PageLoadedCommand}" CommandParameter="{Binding ElementName=Page}"/>
            <i:InvokeCommandAction Command="{Binding LoadedCommand}" CommandParameter="{Binding ElementName=container}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
            <VisualState x:Name="EventTabUnSelected">
                <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Page"
                                                Storyboard.TargetProperty="(Page.Background).                     (SolidColorBrush.Color)">
                        <EasingColorKeyFrame KeyTime="00:00:0.3"
                                         Value="White" />
                    </ColorAnimationUsingKeyFrames>
                    <!--<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)"
                                                    Storyboard.TargetName="Border">
                                            <EasingThicknessKeyFrame KeyTime="0"
                                             Value="1,1,1,0" />
                                        </ThicknessAnimationUsingKeyFrames>-->
                </Storyboard>
            </VisualState>

            <VisualState x:Name="EventTabSelected">
                <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Page"
                                                Storyboard.TargetProperty="(Page.Background).                     (SolidColorBrush.Color)">
                        <EasingColorKeyFrame KeyTime="00:00:0.3"
                                         Value="#e5f1fa"/>
                    </ColorAnimationUsingKeyFrames>
                    <!--<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)"
                                                    Storyboard.TargetName="Border">
                                            <EasingThicknessKeyFrame KeyTime="0"
                                             Value="1,1,1,0" />
                                        </ThicknessAnimationUsingKeyFrames>-->
                </Storyboard>
            </VisualState>
        </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>
    <Grid Margin="10,96,10,10">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="50"/>

        </Grid.RowDefinitions>

        <!--<StackPanel Orientation="Horizontal" >

            <Button Command="{Binding RedirectCommand}" CommandParameter="IndexPage" VerticalAlignment="Center" Style="{DynamicResource Icon}">
                <Base:Icon IconType="Back" />
            </Button>
            <Label  Margin="20,0,0,0" Content="{Binding Title}" FontSize="20"  VerticalAlignment="Center"/>

        </StackPanel>-->

        <TabControl Grid.Row="0">
            <TabItem Header="描述" IsSelected="{Binding IsInfoTabItemSelected, Mode=TwoWay}">
                <ScrollViewer VerticalScrollBarVisibility="Auto">

                    <StackPanel>
                        
                                <TextBlock Text="名称" Style="{DynamicResource LabelName}" Margin="0,0,0,10"/>
                                <Input:InputBox Text="{Binding ProjectName, Mode=TwoWay}" Width="auto" Placeholder="请输入方案名称，不支持特殊符号"/>
                       
                        <TextBlock Text="描述" Style="{DynamicResource LabelName}"/>
                        <Input:InputBox Text="{Binding ProjectDescription, Mode=TwoWay}" Width="auto" Placeholder="方案描述"/>
                        <TextBlock Text="图标" Style="{DynamicResource LabelName}"/>
                        <IconSelection:IconSelection SelectedIcon="{Binding ProjectIcon,Mode=TwoWay}" HorizontalAlignment="Left" FontSize="30" Width="60" Height="60"/>

                    </StackPanel>
                </ScrollViewer>

            </TabItem>
            <TabItem Header="事件" IsSelected="{Binding IsEventTabItemSelected, Mode=TwoWay}">
                <ItemSelect:ItemSelect Items="{Binding Events, Mode=TwoWay}" SelectID="{Binding SelectedEventID, Mode=TwoWay}"/>
            </TabItem>
            <TabItem Header="条件" IsSelected="{Binding IsConditionTabItemSelected, Mode=TwoWay}">
                <InputGroup:InputGroup Groups="{Binding Conditions}" DataSource="{Binding ConditionData}"/>
            </TabItem>
            <TabItem Header="操作" IsSelected="{Binding IsActionsTabItemSelected, Mode=TwoWay}">
                <Grid>
                    <Grid Panel.ZIndex="2" Visibility="{Binding AddACtionDialogVisibility}">
                        <Border Background="White" Margin="20" Panel.ZIndex="1">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="auto"/>

                                </Grid.RowDefinitions>
                                <StackPanel Margin="20">
                                    <TextBlock Text="添加操作"/>
                                    <ComboBox 
                                        Margin="0,10,0,0" 
                                        ItemsSource="{Binding ComBoxActions}" 
                                        SelectedValuePath="ID" 
                                        SelectedValue="{Binding ComBoxSelectedAction.ID}"
                                        DisplayMemberPath="Name"
                                        SelectedItem="{Binding ComBoxSelectedAction}"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Grid.Row="1" Margin="20">
                                    <Button Command="{Binding AddActionCommand}" CommandParameter="{Binding ElementName=container}" Width="120" Height="30" Content="确定"/>
                                    <Button Command="{Binding ActionDialogStateCommand}" CommandParameter="false" Width="120" Height="30" Content="取消" Margin="10,0,0,0"/>
                                </StackPanel>
                            </Grid>
                        </Border>
                        <Border Background="Black" Opacity=".5"/>
                    </Grid>
                    <Action:ActionContainer x:Name="container" Grid.Row="1" AddActionCommand="{Binding ShowActionDialogCommand}"/>
                </Grid>
            </TabItem>
        </TabControl>
        <StackPanel Orientation="Horizontal" Grid.Row="1" VerticalAlignment="Bottom" HorizontalAlignment="Right">
            <Button Content="{Binding ButtonSaveName}" Width="120" Height="35" Command="{Binding AddCommand}" CommandParameter="{Binding ElementName=container}" Style="{DynamicResource Primary}"/>
            <!--<Button Content="Import" Width="120" Height="30" Command="{Binding ImportCommand}" CommandParameter="{Binding ElementName=container}"/>-->
        </StackPanel>
    </Grid>
</Page>
